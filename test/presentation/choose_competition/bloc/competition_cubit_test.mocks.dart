// Mocks generated by Mockito 5.2.0 from annotations
// in football_matches/test/presentation/choose_competition/bloc/competition_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:football_matches/data/model/area.dart' as _i3;
import 'package:football_matches/data/model/competition.dart' as _i6;
import 'package:football_matches/data/model/matches_by_competition.dart' as _i7;
import 'package:football_matches/data/model/team_details.dart' as _i8;
import 'package:football_matches/data/repository/matches_respository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDio_0 extends _i1.Fake implements _i2.Dio {}

class _FakeAreas_1 extends _i1.Fake implements _i3.Areas {}

/// A class which mocks [MatchesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchesRepository extends _i1.Mock implements _i4.MatchesRepository {
  MockMatchesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio_0())
          as _i2.Dio);
  @override
  _i5.Future<_i6.Competitions?> getCompetitions() =>
      (super.noSuchMethod(Invocation.method(#getCompetitions, []),
              returnValue: Future<_i6.Competitions?>.value())
          as _i5.Future<_i6.Competitions?>);
  @override
  _i5.Future<_i3.Areas> getAreas() =>
      (super.noSuchMethod(Invocation.method(#getAreas, []),
              returnValue: Future<_i3.Areas>.value(_FakeAreas_1()))
          as _i5.Future<_i3.Areas>);
  @override
  _i5.Future<_i7.MatchesByCompetition?> getWinner(String? idCompetition) =>
      (super.noSuchMethod(Invocation.method(#getWinner, [idCompetition]),
              returnValue: Future<_i7.MatchesByCompetition?>.value())
          as _i5.Future<_i7.MatchesByCompetition?>);
  @override
  _i5.Future<_i8.TeamDetails?> getTeamDetails(String? idTeam) =>
      (super.noSuchMethod(Invocation.method(#getTeamDetails, [idTeam]),
              returnValue: Future<_i8.TeamDetails?>.value())
          as _i5.Future<_i8.TeamDetails?>);
}
